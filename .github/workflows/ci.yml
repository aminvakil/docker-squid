---
name: CI
'on':
  pull_request:
  push:
    branches:
      - master

jobs:

  hadolint:
    name: hadolint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Install hadolint.
        run: |
          sudo curl -L https://github.com/hadolint/hadolint/releases/download/v$HADOLINT_VERSION/hadolint-$(uname -s)-$(uname -m) -o /usr/local/bin/hadolint
          sudo chmod 755 /usr/local/bin/hadolint
        env:
          HADOLINT_VERSION: 1.19.0

      - name: Run hadolint.
        run: hadolint Dockerfile

  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Find an open port.
        run: |
          CLIENT_PORT=$(cat /dev/urandom|od -N2 -An -i|awk -v f=10000 -v r=19999 '{printf "%i\n", f + r * $1 / 65536}')
          "[ $(netstat -an | grep LISTEN | grep :$CLIENT_PORT | wc -l) -eq 0 ] || { ./$0 && exit 0 || exit 1; }"

      - name: Build docker image.
        run: docker build --no-cache --tag ${GITHUB_REPOSITORY}:${GITHUB_ACTION}

      - name: Run a container of created image.
        run: |
          DOCKERCONTAINER=$(docker run -d -p 127.0.0.1:${CLIENT_PORT}:3128 ${GITHUB_REPOSITORY}:${GITHUB_ACTION}
          sleep 5

      - name: Check if container is still running
        run: docker ps -f id=${DOCKERCONTAINER}

      - name: Check if the port is responding.
        run: curl -s 127.0.0.1:${CLIENT_PORT} | grep -q squid

      - name: Check if the container is correctly stopped and removed.
        run: docker stop ${DOCKERCONTAINER} && docker rm -fv ${DOCKERCONTAINER}
